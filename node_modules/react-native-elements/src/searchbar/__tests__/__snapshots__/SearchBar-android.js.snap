// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android SearchBar component Props cancel button Disabled cancelButtonProps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    cancelButtonProps={
      Object {
        "disabled": true,
      }
    }
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props cancel button Disabled cancelButtonProps disabled styles 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    cancelButtonProps={
      Object {
        "buttonDisabledStyle": Object {
          "backgroundColor": "#cdcdcd",
        },
        "buttonDisabledTextStyle": Object {
          "color": "#ffffff",
        },
        "disabled": true,
      }
    }
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props cancel button Enabled cancelButtonProps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    cancelButtonProps={
      Object {
        "buttonStyle": Object {
          "elevation": 0,
        },
        "buttonTextStyle": Object {
          "fontSize": 12,
        },
        "color": "black",
      }
    }
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props cancel button Enabled cancelButtonTitle 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    cancelButtonTitle="Annuler"
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props clearIcon and without clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props clearIcon and without custom clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props clearIcon and without no clearIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props searchIcon and without custom searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={<View />}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    round={true}
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props searchIcon and without no searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={null}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props searchIcon and without searchIcon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={50}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    lightTheme={true}
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component Props showLoading, loadingProps 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "height": 70,
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "flex": 1,
              "marginRight": 5,
            }
          }
        />
      </View>
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;

exports[`Android SearchBar component should render with a preset value 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Themed.Icon
          color="rgba(0, 0, 0, 0.54)"
          name="clear"
          onPress={[Function]}
          size={25}
          type="material"
        />
      </View>
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value="Chickens"
  />
</View>
`;

exports[`Android SearchBar component should render without issues 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffff",
      "paddingBottom": 8,
      "paddingTop": 8,
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "paddingHorizontal": 0,
      }
    }
    inputContainerStyle={
      Object {
        "borderBottomWidth": 0,
        "width": "100%",
      }
    }
    inputStyle={
      Object {
        "marginLeft": 24,
        "marginRight": 8,
      }
    }
    leftIcon={
      <Themed.Icon
        color="rgba(0, 0, 0, 0.54)"
        name="search"
        size={25}
        type="material"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    renderErrorMessage={false}
    rightIcon={
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    value=""
  />
</View>
`;
