// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonGroup Component Disabled should apply disabled styles 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "green",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component Disabled should disable all items 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component Disabled should disable only some items 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={true}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "hsl(208, 8%, 63%)",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component should apply values from theme 1`] = `
<View
  replaceTheme={[Function]}
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
  updateTheme={[Function]}
>
  <View
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID="buttonGroupItem"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#2089dc",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "red",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID="buttonGroupItem"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "opacity": 1,
        }
      }
      testID="buttonGroupItem"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`ButtonGroup Component should have default onPress event 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component should render selectedIndex 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "red",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#fff",
              "fontSize": 12,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component should render with button.element 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "red",
        "borderRightWidth": 300,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text />
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <View />
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component should render without inner borders 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 0,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 0,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "#5e6977",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component should render without issues 1`] = `
<View
  style={
    Object {
      "backgroundColor": "yellow",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderRightColor": "#bdc6cf",
        "borderRightWidth": 1,
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`ButtonGroup Component vertical ButtonGroup 1`] = `
<View
  style={
    Object {
      "backgroundColor": "yellow",
      "borderColor": "#e3e3e3",
      "borderRadius": 3,
      "borderWidth": 1,
      "flexDirection": "column",
      "height": null,
      "marginHorizontal": 10,
      "marginVertical": 5,
      "overflow": "hidden",
    }
  }
>
  <View
    key="0"
    style={
      Object {
        "borderBottomColor": "#bdc6cf",
        "borderBottomWidth": 1,
        "flex": 1,
        "height": 40,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 1
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="1"
    style={
      Object {
        "borderBottomColor": "#bdc6cf",
        "borderBottomWidth": 1,
        "flex": 1,
        "height": 40,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 2
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
  <View
    key="2"
    style={
      Object {
        "flex": 1,
        "height": 40,
      }
    }
  >
    <ForwardRef
      disabled={false}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      testID="buttonGroupItem"
      underlayColor="#2089dc"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "blue",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Themed.Text
          style={
            Object {
              "color": "pink",
              "fontSize": 16.25,
              "fontWeight": "500",
            }
          }
          testID="buttonGroupItemText"
        >
          Button 3
        </Themed.Text>
      </View>
    </ForwardRef>
  </View>
</View>
`;
